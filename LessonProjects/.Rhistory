udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "Preston Hall")
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
udacious[mystery == 12]
data(mtcars)
names(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
?row.names
row.names(mtcars) <- c(1:32)
mtcars
data(mtcars)
head(mtcars, 10)
mtcars$mpg
mean(mtcars$mpg)
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5+7
x
skip()
main()
bye()
getwd()
setwd("/Users/preston/Projects/DAND-EDA/LessonProjects")
getwd()
ls()
clear
clear()
list.files()
pf <- read.csv('psuedo_facebook.csv')
pf <- read.csv('psuedo_facebook.tsv', sep = '\t')
pf <- read.csv("pseudo_facebook.tsv", sep = "\t")
names(pf)
install.packages('ggplot2')
library(ggplot2)
qplot(x = dob_day, data = pf)
install.packages('ggplot2')
library(ggplot2)
install.packages("ggplot2")
qplot(x = dob_day, data = pf)
qplot(x = dob_day, data = pf) +
scale_x_discrete(breaks=1:31)
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31)
install.packages('ggthemes', dependencies = TRUE)
library(ggthemes)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
theme_set(theme_minimal(24))
ggplot(aes(x = dob_day), data = pf) +
+   geom_histogram(binwidth = 1) +
+   scale_x_continuous(breaks = 1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
theme_set(theme_minimal(50))
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
theme_set(theme_minimal(10))
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(data = pf, aes(x = dob_day)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month)
ggplot(data = pf, aes(x = dob_day)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month) #create histogram for each category
sumary(pf)
summary(pf)
qplot(data = pf, aes(x = friend_count)) +
geom_histogram(binwidth = 25)
qplot(data = pf, aes(x = friend_count))
ggplot(aes(x = friend_count), data = pf) +
geom_histogram()
ggplot(aes(x = friend_count), data = pf, bin_width = 30) +
geom_histogram()
ggplot(aes(x = friend_count), data = pf, bin_width = 10) +
geom_histogram()
qplot(x = friend_count, data = pf)
qplot(x = friend_count, data = pf)
pf <- read.csv("pseudo_facebook.tsv", sep = "\t")
names(pf)
install.packages('ggplot2')
library(ggplot2)
install.packages('ggthemes', dependencies = TRUE)
library(ggthemes)
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(data = pf, aes(x = dob_day)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month) #create histogram for each category
install.packages("ggplot2")
install.packages("ggthemes", dependencies = TRUE)
qplot(x = friend_count, data = pf)
pf <- read.csv("pseudo_facebook.tsv", sep = "\t")
names(pf)
install.packages('ggplot2')
library(ggplot2)
qplot(x = friend_count, data = pf)
qplot(x = friend_count, data = pf, xlim = c(0, 1000))
qplot(x = friend_count, data = pf, xlim = c(0, 1000))
qplot(x = friend_count, data = pf) +
scale_x_continuous(limits = c(0, 1000))
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000, 50))
?Facet
pf facet_grid(sex ~ .)
qplot(x = friend_count, data = pf) +
facet_grid(gender ~ .)
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000, 50)) +
facet_wrap(gender~)
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000, 50)) +
facet_wrap(gender~.)
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000, 50)) +
facet_wrap(gender~.)
table(pf$gender)
table(pf$gender) # To get a count(add below to get average)
by(pf$friend_count, pf$gender, summary)
242-165
96-74
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420')
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
ggplot(aes(x = tenure / 365), data = pf) +
geom_histogram(color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
install.packages('ggplot2')
library(ggplot2)
install.packages("ggplot2")
# Load the Data
loanData <- read.csv('prosperLoanData.csv')
attach(loanData)
plot(Pop.2000)
summary(loanData)
string(loanData)
str(loanData)
structure(loanData)
dim(loanData)
attach(loanData)
plot(BorrowerAPR)
attach(loanData)
plot(StatedMonthlyIncome)
attach(loanData)
plot(StatedMonthlyIncome, type = h)
attach(loanData)
plot(StatedMonthlyIncome, type ="h")
attach(loanData)
plot(StatedMonthlyIncome, type ="h")
qplot(x = StatedMonthlyIncome, data = loanData, xlim = c(0, 500000))
qplot(x = StatedMonthlyIncome, data = loanData, xlim = c(0, 500000))
install.packages('ggthemes', dependencies = TRUE)
library(ggthemes)
qplot(x = StatedMonthlyIncome, data = loanData, xlim = c(0, 500000))
qplot(x = StatedMonthlyIncome, data = loanData, xlim = c(0, 500000))
ggplot(x = StatedMonthlyIncome, data = loanData, xlim = c(0, 500000))
