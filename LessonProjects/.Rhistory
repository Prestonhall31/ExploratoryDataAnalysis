udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "Preston Hall")
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
udacious[mystery == 12]
data(mtcars)
names(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
?row.names
row.names(mtcars) <- c(1:32)
mtcars
data(mtcars)
head(mtcars, 10)
mtcars$mpg
mean(mtcars$mpg)
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5+7
x
skip()
main()
bye()
getwd()
setwd("/Users/preston/Projects/DAND-EDA/LessonProjects")
getwd()
ls()
clear
clear()
list.files()
pf <- read.csv('psuedo_facebook.csv')
pf <- read.csv('psuedo_facebook.tsv', sep = '\t')
pf <- read.csv("pseudo_facebook.tsv", sep = "\t")
names(pf)
install.packages('ggplot2')
library(ggplot2)
qplot(x = dob_day, data = pf)
install.packages('ggplot2')
library(ggplot2)
install.packages("ggplot2")
qplot(x = dob_day, data = pf)
qplot(x = dob_day, data = pf) +
scale_x_discrete(breaks=1:31)
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31)
install.packages('ggthemes', dependencies = TRUE)
library(ggthemes)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
theme_set(theme_minimal(24))
ggplot(aes(x = dob_day), data = pf) +
+   geom_histogram(binwidth = 1) +
+   scale_x_continuous(breaks = 1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
theme_set(theme_minimal(50))
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
theme_set(theme_minimal(10))
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(data = pf, aes(x = dob_day)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month)
ggplot(data = pf, aes(x = dob_day)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month) #create histogram for each category
sumary(pf)
summary(pf)
qplot(data = pf, aes(x = friend_count)) +
geom_histogram(binwidth = 25)
qplot(data = pf, aes(x = friend_count))
ggplot(aes(x = friend_count), data = pf) +
geom_histogram()
ggplot(aes(x = friend_count), data = pf, bin_width = 30) +
geom_histogram()
ggplot(aes(x = friend_count), data = pf, bin_width = 10) +
geom_histogram()
qplot(x = friend_count, data = pf)
qplot(x = friend_count, data = pf)
pf <- read.csv("pseudo_facebook.tsv", sep = "\t")
names(pf)
install.packages('ggplot2')
library(ggplot2)
install.packages('ggthemes', dependencies = TRUE)
library(ggthemes)
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(data = pf, aes(x = dob_day)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month) #create histogram for each category
install.packages("ggplot2")
install.packages("ggthemes", dependencies = TRUE)
qplot(x = friend_count, data = pf)
pf <- read.csv("pseudo_facebook.tsv", sep = "\t")
names(pf)
install.packages('ggplot2')
library(ggplot2)
qplot(x = friend_count, data = pf)
qplot(x = friend_count, data = pf, xlim = c(0, 1000))
qplot(x = friend_count, data = pf, xlim = c(0, 1000))
qplot(x = friend_count, data = pf) +
scale_x_continuous(limits = c(0, 1000))
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000, 50))
?Facet
pf facet_grid(sex ~ .)
qplot(x = friend_count, data = pf) +
facet_grid(gender ~ .)
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000, 50)) +
facet_wrap(gender~)
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000, 50)) +
facet_wrap(gender~.)
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0,1000, 50)) +
facet_wrap(gender~.)
table(pf$gender)
table(pf$gender) # To get a count(add below to get average)
by(pf$friend_count, pf$gender, summary)
242-165
96-74
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420')
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
ggplot(aes(x = tenure / 365), data = pf) +
geom_histogram(color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
install.packages('ggplot2')
library(ggplot2)
install.packages("ggplot2")
# Load the Data
loanData <- read.csv('prosperLoanData.csv')
attach(loanData)
plot(Pop.2000)
summary(loanData)
string(loanData)
str(loanData)
structure(loanData)
dim(loanData)
attach(loanData)
plot(BorrowerAPR)
attach(loanData)
plot(StatedMonthlyIncome)
attach(loanData)
plot(StatedMonthlyIncome, type = h)
attach(loanData)
plot(StatedMonthlyIncome, type ="h")
attach(loanData)
plot(StatedMonthlyIncome, type ="h")
qplot(x = StatedMonthlyIncome, data = loanData, xlim = c(0, 500000))
qplot(x = StatedMonthlyIncome, data = loanData, xlim = c(0, 500000))
install.packages('ggthemes', dependencies = TRUE)
library(ggthemes)
qplot(x = StatedMonthlyIncome, data = loanData, xlim = c(0, 500000))
qplot(x = StatedMonthlyIncome, data = loanData, xlim = c(0, 500000))
ggplot(x = StatedMonthlyIncome, data = loanData, xlim = c(0, 500000))
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
library(ggplot2)
ps = read.csv("pseudo_facebook.tsc")
library(ggplot2)
ps = read.csv("pseudo_facebook.tsv")
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
library(ggplot2)
library(dplyr)
library(gridExtra)
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point()
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point() +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +  #go back to geom_point and add the position arguement to prevent negative numbers
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_jitter(alpha = 1/10, position = position_jitter(h = 0)) +
coord_trans(y = 'sqrt')
# library(dplyr)
age_groups <- group_by(pf, age) # grouped_by age from pf dataset
pf.fc_by_age <- summarise(age_groups,   # creating mean, median and count
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) # can only be used for summarize and returns
# number of users
pf.fc_by_age <- arrange(pf.fc_by_age, age) # arranges by age
head(pf.fc_by_age)
# **My code**
# qplot(data = pf.fc_by_age, x = age, y = friend_count_mean)
# Video code
ggplot(aes(age, friend_count_mean), data = pf.fc_by_age) +
geom_line() #geom_point() will give the scatterplot similar to above
ggplot(aes(x = age, y = friend_count), data = pf) +
coord_cartesian(xlim = c(13, 70), ylim = c(0, 1000), expand = "FALSE") + # allows me to zoom in on the graph
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile,
fun.args = list(probs = .1),
linetype = "dashed", color = "blue") +
geom_line(stat = 'summary', fun.y = quantile,
fun.args = list(probs = .5),
color = "blue") +
geom_line(stat = 'summary', fun.y = quantile,
fun.args = list(probs = .9),
linetype = "dashed", color = "blue")
cor.test(pf$age, pf$friend_count,
method = "pearson")
with(subset(pf, age < 70), cor.test(age, friend_count))
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
geom_point()
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
geom_point() +
xlim(0, quantile(pf$www_likes_received, 0.95)) +
ylim(0, quantile(pf$likes_received, 0.95))
cor.test(pf$www_likes_received, pf$likes_received, method = "pearson")
# install.packages('alr3')
library(alr3)
data(Mitchell)
ggplot(aes(x = Month, y = Temp), data = Mitchell) +
geom_point()
cor.test(Mitchell$Temp, Mitchell$Month, method = "pearson")
ggplot(aes(x = Month, y = Temp), data = Mitchell) +
geom_point() +
scale_x_continuous(breaks = seq(0, 203, 12))
pf$age_with_months <- with(pf, pf$age + (1 - pf$dob_month / 12))
pf.fc_by_age_months <- pf %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age_with_months)
head(pf.fc_by_age_months)
ggplot(aes(x = age_with_months, y = friend_count_mean),
data = subset(pf.fc_by_age_months, age_with_months < 71)) +
geom_line()
p1 <- ggplot(aes(x = age, y = friend_count_mean),
data = subset(pf.fc_by_age, age < 71)) +
geom_line() +
geom_smooth()
p2 <- ggplot(aes(x = age_with_months, y = friend_count_mean),
data = subset(pf.fc_by_age_months, age_with_months < 71)) +
geom_line()  +
geom_smooth()
p3 <- ggplot(aes(x = round(age/5) * 5, y = friend_count),
data = subset(pf, age < 71)) +
geom_line(stat = 'summary', fun.y = mean)
grid.arrange(p2, p1, p3, ncol = 1)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
library(ggplot2)
library(dplyr)
ps = read.csv("pseudo_facebook.tsv")
library(ggplot2)
library(dplyr)
pf = read.csv("pseudo_facebook.tsv")
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
summary(pf)
names(pf)
library(ggplot2)
library(dplyr)
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
names(pf)
ggplot(aes(x = gender, y = age), data = subset(pf, !is.na(gender))) +
geom_histogram()
?geom_histogram()
ggplot(aes(x = gender), data = subset(pf, !is.na(gender))) +
geom_histogram()
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender), stat = 'summary', fun.y = median)
install.packages('reshape2')
libray(reshape2)
library(reshape2)
pf.fc_by_age_gender.wide <-
subset(pf.fc_by_age_gender[c('age', 'gender', 'median_friend_count')],
!is.na(gender)) %>%
spread(gender, median_friend_count) %>%
mutate(ratio = male / female)
install.packages("tidyr")
library(tidyr)
spread(subset(pf.fc_by_age_gender,
select = c('gender', 'age', 'median_friend_count')),
gender, median_friend_count)
